{"ast":null,"code":"var _jsxFileName = \"/home/sander/Documents/Repositoray/Bedriftregister/src/components/collapsible.js\",\n    _s = $RefreshSig$();\n\nimport { StyledButton, StyledContent } from '../style/collapsible.styled';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Collapsible = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapsible\",\n    children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n      className: \"toggle\",\n      onClick: () => setIsOpen(!isOpen),\n      children: \"Les mer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      te: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isOpen ? 'content-parent show' : 'content-parent',\n        children: /*#__PURE__*/_jsxDEV(StyledContent, {\n          className: \"content\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Collapsible, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Collapsible;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collapsible\");","map":{"version":3,"names":["StyledButton","StyledContent","useState","Collapsible","children","isOpen","setIsOpen"],"sources":["/home/sander/Documents/Repositoray/Bedriftregister/src/components/collapsible.js"],"sourcesContent":["import { StyledButton, StyledContent } from '../style/collapsible.styled'\nimport { useState } from 'react'\n\nexport const Collapsible = ({ children }) => {\n\tconst [isOpen, setIsOpen] = useState(false)\n\n\treturn (\n\t\t<div className='collapsible'>\n\t\t\t<StyledButton className='toggle' onClick={() => setIsOpen(!isOpen)}>\n\t\t\t\tLes mer\n\t\t\t</StyledButton>\n\t\t\t<div te>\n\t\t\t\t<div className={isOpen ? 'content-parent show' : 'content-parent'}>\n\t\t\t\t\t<StyledContent className='content'>{children}</StyledContent>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,6BAA5C;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;EAEA,oBACC;IAAK,SAAS,EAAC,aAAf;IAAA,wBACC,QAAC,YAAD;MAAc,SAAS,EAAC,QAAxB;MAAiC,OAAO,EAAE,MAAMI,SAAS,CAAC,CAACD,MAAF,CAAzD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAIC;MAAK,EAAE,MAAP;MAAA,uBACC;QAAK,SAAS,EAAEA,MAAM,GAAG,qBAAH,GAA2B,gBAAjD;QAAA,uBACC,QAAC,aAAD;UAAe,SAAS,EAAC,SAAzB;UAAA,UAAoCD;QAApC;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QAJD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAYA,CAfM;;GAAMD,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}