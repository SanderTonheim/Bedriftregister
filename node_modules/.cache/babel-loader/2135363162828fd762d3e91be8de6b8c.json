{"ast":null,"code":"var _jsxFileName = \"/home/sander/Documents/Repositoray/Bedriftregister/src/components/FetchData/fetchData.js\";\nimport { StyledLi, StyledUl } from './Style/FetchData.styled';\nimport { Collapsible } from '../collapsible';\nimport { StyledCollapsible } from '../styled.collapisble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FetchData() {\n  // Select the DOM-element, so that you can replace it with content\n  let PROJECT_ID = 'oans3nsr';\n  let DATASET = 'production';\n  let QUERY = encodeURIComponent('*[_type == \"bedrift\"]'); // Compose the URL for your project's endpoint and add the query\n\n  let URL = `https://${PROJECT_ID}.api.sanity.io/v2021-10-21/data/query/${DATASET}?query=${QUERY}`; // fetch the content\n\n  fetch(URL).then(res => res.json()).then(_ref => {\n    let {\n      result\n    } = _ref;\n    console.log(result); // get the list element, and the first item\n\n    const list = document.querySelector(StyledUl);\n    console.log(list, 'ok'); // let firstListItem = document.querySelector(StyledLi)\n    // console.log(firstListItem, 'ok')\n\n    if (result.length > 0) {\n      // remove the placeholder content\n      // list.removeChild(firstListItem)\n      result.forEach(bedrift => {\n        // create a list element for each animal\n        const listItem = document.createElement('StyledLi');\n\n        const listItemBtn = /*#__PURE__*/_jsxDEV(\"html\", {\n          lang: \"en\",\n          children: [/*#__PURE__*/_jsxDEV(\"head\", {\n            children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n              charset: \"UTF-8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n              \"http-equiv\": \"X-UA-Compatible\",\n              content: \"IE=edge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n              name: \"viewport\",\n              content: \"width=device-width, initial-scale=1.0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"body\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 26\n        }, this); // add the company name as the text content\n\n\n        listItem.textContent = bedrift.name;\n        console.log(listItem, 'ok'); // add the item to the list\n\n        list.appendChild(listItem);\n        listItem.append(StyledCollapsible);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(StyledUl, {\n    children: /*#__PURE__*/_jsxDEV(StyledLi, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(StyledCollapsible, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n\n_c = FetchData;\nexport default FetchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"names":["StyledLi","StyledUl","Collapsible","StyledCollapsible","FetchData","PROJECT_ID","DATASET","QUERY","encodeURIComponent","URL","fetch","then","res","json","result","console","log","list","document","querySelector","length","forEach","bedrift","listItem","createElement","listItemBtn","textContent","name","appendChild","append"],"sources":["/home/sander/Documents/Repositoray/Bedriftregister/src/components/FetchData/fetchData.js"],"sourcesContent":["import { StyledLi, StyledUl } from './Style/FetchData.styled'\nimport { Collapsible } from '../collapsible'\nimport { StyledCollapsible } from '../styled.collapisble'\n\nfunction FetchData() {\n\t// Select the DOM-element, so that you can replace it with content\n\tlet PROJECT_ID = 'oans3nsr'\n\tlet DATASET = 'production'\n\tlet QUERY = encodeURIComponent('*[_type == \"bedrift\"]')\n\n\t// Compose the URL for your project's endpoint and add the query\n\tlet URL = `https://${PROJECT_ID}.api.sanity.io/v2021-10-21/data/query/${DATASET}?query=${QUERY}`\n\n\t// fetch the content\n\tfetch(URL)\n\t\t.then((res) => res.json())\n\t\t.then(({ result }) => {\n\t\t\tconsole.log(result)\n\t\t\t// get the list element, and the first item\n\t\t\tconst list = document.querySelector(StyledUl)\n\t\t\tconsole.log(list, 'ok')\n\t\t\t// let firstListItem = document.querySelector(StyledLi)\n\t\t\t// console.log(firstListItem, 'ok')\n\n\t\t\tif (result.length > 0) {\n\t\t\t\t// remove the placeholder content\n\t\t\t\t// list.removeChild(firstListItem)\n\t\t\t\tresult.forEach((bedrift) => {\n\t\t\t\t\t// create a list element for each animal\n\t\t\t\t\tconst listItem = document.createElement('StyledLi')\n\t\t\t\t\tconst listItemBtn = <html lang=\"en\">\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<meta charset=\"UTF-8\" />\n\t\t\t\t\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n\t\t\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t\t\t\t\t<title>Document</title>\n\t\t\t\t\t</head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t\n\t\t\t\t\t</body>\n\t\t\t\t\t</html>\n\n\t\t\t\t\t// add the company name as the text content\n\t\t\t\t\tlistItem.textContent = bedrift.name\n\t\t\t\t\tconsole.log(listItem, 'ok')\n\n\t\t\t\t\t// add the item to the list\n\t\t\t\t\tlist.appendChild(listItem)\n\t\t\t\t\tlistItem.append(StyledCollapsible)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\treturn (\n\t\t<StyledUl>\n\t\t\t<StyledLi>\n\t\t\t\t{/* <p>Company loading</p> */} <StyledCollapsible /></StyledLi>\n\t\t</StyledUl>\n\t)\n}\n\nexport default FetchData\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,0BAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;;AAEA,SAASC,SAAT,GAAqB;EACpB;EACA,IAAIC,UAAU,GAAG,UAAjB;EACA,IAAIC,OAAO,GAAG,YAAd;EACA,IAAIC,KAAK,GAAGC,kBAAkB,CAAC,uBAAD,CAA9B,CAJoB,CAMpB;;EACA,IAAIC,GAAG,GAAI,WAAUJ,UAAW,yCAAwCC,OAAQ,UAASC,KAAM,EAA/F,CAPoB,CASpB;;EACAG,KAAK,CAACD,GAAD,CAAL,CACEE,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEO,QAAgB;IAAA,IAAf;MAAEG;IAAF,CAAe;IACrBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADqB,CAErB;;IACA,MAAMG,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuBlB,QAAvB,CAAb;IACAc,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAAkB,IAAlB,EAJqB,CAKrB;IACA;;IAEA,IAAIH,MAAM,CAACM,MAAP,GAAgB,CAApB,EAAuB;MACtB;MACA;MACAN,MAAM,CAACO,OAAP,CAAgBC,OAAD,IAAa;QAC3B;QACA,MAAMC,QAAQ,GAAGL,QAAQ,CAACM,aAAT,CAAuB,UAAvB,CAAjB;;QACA,MAAMC,WAAW,gBAAG;UAAM,IAAI,EAAC,IAAX;UAAA,wBACpB;YAAA,wBACC;cAAM,OAAO,EAAC;YAAd;cAAA;cAAA;cAAA;YAAA,QADD,eAEC;cAAM,cAAW,iBAAjB;cAAmC,OAAO,EAAC;YAA3C;cAAA;cAAA;cAAA;YAAA,QAFD,eAGC;cAAM,IAAI,EAAC,UAAX;cAAsB,OAAO,EAAC;YAA9B;cAAA;cAAA;cAAA;YAAA,QAHD,eAIC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJD;UAAA;YAAA;YAAA;YAAA;UAAA,QADoB,eAOpB;YAAA;YAAA;YAAA;UAAA,QAPoB;QAAA;UAAA;UAAA;UAAA;QAAA,QAApB,CAH2B,CAe3B;;;QACAF,QAAQ,CAACG,WAAT,GAAuBJ,OAAO,CAACK,IAA/B;QACAZ,OAAO,CAACC,GAAR,CAAYO,QAAZ,EAAsB,IAAtB,EAjB2B,CAmB3B;;QACAN,IAAI,CAACW,WAAL,CAAiBL,QAAjB;QACAA,QAAQ,CAACM,MAAT,CAAgB1B,iBAAhB;MACA,CAtBD;IAuBA;EACD,CArCF;EAsCA,oBACC,QAAC,QAAD;IAAA,uBACC,QAAC,QAAD;MAAA,6BACgC,QAAC,iBAAD;QAAA;QAAA;QAAA;MAAA,QADhC;IAAA;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAMA;;KAtDQC,S;AAwDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}