{"ast":null,"code":"var _jsxFileName = \"/home/sander/Documents/Repositoray/Bedriftregister/src/components/collapsible.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Collapsible = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Collapsible\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle\",\n      onClick: () => setIsOpen,\n      children: \"Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: \"Some content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Collapsible, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Collapsible;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collapsible\");","map":{"version":3,"names":["useState","Collapsible","isOpen","setIsOpen"],"sources":["/home/sander/Documents/Repositoray/Bedriftregister/src/components/collapsible.js"],"sourcesContent":["import { useState } from 'react'\n\nexport const Collapsible = () => {\n\tconst [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <div className='Collapsible'>\n      <button className='toggle' onClick={() => setIsOpen}>Toggle</button>\n{isOpen && <div className='content'>Some content</div>}\n\n    </div>\n  )\n  \n  \n  \n  \n}\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAChC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,KAAD,CAApC;EAEC,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,wBACE;MAAQ,SAAS,EAAC,QAAlB;MAA2B,OAAO,EAAE,MAAMG,SAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEHD,MAAM,iBAAI;MAAK,SAAS,EAAC,SAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFP;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAdM;;GAAMD,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}