{"ast":null,"code":"var _jsxFileName = \"/home/sander/Documents/Repositoray/Bedriftregister/src/components/fetchData.js\";\nimport { Collapsible } from './collapsible';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FetchData() {\n  // Select the DOM-element, so that you can replace it with content\n  let PROJECT_ID = 'oans3nsr';\n  let DATASET = 'production';\n  let QUERY = encodeURIComponent('*[_type == \"bedrift\"]'); // Compose the URL for your project's endpoint and add the query\n\n  let URL = `https://${PROJECT_ID}.api.sanity.io/v2021-10-21/data/query/${DATASET}?query=${QUERY}`; // fetch the content\n\n  fetch(URL).then(res => res.json()).then(_ref => {\n    let {\n      result\n    } = _ref;\n    console.log(result); // get the list element, and the first item\n\n    const list = document.querySelector('ul');\n    console.log(list, 'ok');\n    let firstListItem = document.querySelector('li'); // console.log(firstListItem, 'ok')\n\n    if (result.length > 0) {\n      // remove the placeholder content\n      list.removeChild(firstListItem);\n      result.forEach(bedrift => {\n        // create a list element for each company\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: b\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, this);\n      });\n    }\n  });\n}\n\n_c = FetchData;\nexport default FetchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"names":["Collapsible","FetchData","PROJECT_ID","DATASET","QUERY","encodeURIComponent","URL","fetch","then","res","json","result","console","log","list","document","querySelector","firstListItem","length","removeChild","forEach","bedrift","b"],"sources":["/home/sander/Documents/Repositoray/Bedriftregister/src/components/fetchData.js"],"sourcesContent":["import { Collapsible } from './collapsible'\n\nfunction FetchData() {\n\t// Select the DOM-element, so that you can replace it with content\n\tlet PROJECT_ID = 'oans3nsr'\n\tlet DATASET = 'production'\n\tlet QUERY = encodeURIComponent('*[_type == \"bedrift\"]')\n\n\t// Compose the URL for your project's endpoint and add the query\n\tlet URL = `https://${PROJECT_ID}.api.sanity.io/v2021-10-21/data/query/${DATASET}?query=${QUERY}`\n\n\t// fetch the content\n\tfetch(URL)\n\t\t.then((res) => res.json())\n\t\t.then(({ result }) => {\n\t\t\tconsole.log(result)\n\t\t\t// get the list element, and the first item\n\t\t\tconst list = document.querySelector('ul')\n\t\t\tconsole.log(list, 'ok')\n\t\t\tlet firstListItem = document.querySelector('li')\n\t\t\t// console.log(firstListItem, 'ok')\n\n\t\t\tif (result.length > 0) {\n\t\t\t\t// remove the placeholder content\n\t\t\t\tlist.removeChild(firstListItem)\n\n\t\t\t\tresult.forEach((bedrift) => {\n\t\t\t\t\t// create a list element for each company\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>{b}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n}\n\nexport default FetchData\n"],"mappings":";AAAA,SAASA,WAAT,QAA4B,eAA5B;;;AAEA,SAASC,SAAT,GAAqB;EACpB;EACA,IAAIC,UAAU,GAAG,UAAjB;EACA,IAAIC,OAAO,GAAG,YAAd;EACA,IAAIC,KAAK,GAAGC,kBAAkB,CAAC,uBAAD,CAA9B,CAJoB,CAMpB;;EACA,IAAIC,GAAG,GAAI,WAAUJ,UAAW,yCAAwCC,OAAQ,UAASC,KAAM,EAA/F,CAPoB,CASpB;;EACAG,KAAK,CAACD,GAAD,CAAL,CACEE,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEO,QAAgB;IAAA,IAAf;MAAEG;IAAF,CAAe;IACrBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADqB,CAErB;;IACA,MAAMG,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAb;IACAJ,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAAkB,IAAlB;IACA,IAAIG,aAAa,GAAGF,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAApB,CALqB,CAMrB;;IAEA,IAAIL,MAAM,CAACO,MAAP,GAAgB,CAApB,EAAuB;MACtB;MACAJ,IAAI,CAACK,WAAL,CAAiBF,aAAjB;MAEAN,MAAM,CAACS,OAAP,CAAgBC,OAAD,IAAa;QAC3B;QACA,oBACC;UAAA,uBACC;YAAA,UAAKC;UAAL;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QADD;MAKA,CAPD;IAQA;EACD,CAvBF;AAwBA;;KAlCQrB,S;AAoCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}